n = int(input())

# 算因子 贡献了几次   比如12
#  1   2   3    4    5   6   7   8   9   9   10   11   12
#  12  6   4    3    2   2   1   1   1   1   1    1    1    [n//i]
# 区间[l,r] 中的数值都是[n//i]   r = n//(n//l)
mod = 10 ** 9 + 7


def S(x):
    return x * (x + 1) * (2 * x + 1) // 6  # 这个公式算的就是1到n的平方和


ans = 0
l = 1
while l <= n:
    r = min(n // (n // l), n)  # 计算这个因子从下标l到下标r都是一个贡献值
    # 区间l到r的因数贡献 = [n//i] * 求和区间i^2  (就是就是贡献次数 * 这个因子的平方)
    # 而 求和区间[l,r]的平方和就等于S(r) - S(l - 1)
    ans += (n // l) * (S(r) - S(l - 1))
    l = r + 1
print(ans % mod)
